name: frontend-ci
on:
  pull_request:
    types: [opened, ready_for_review, synchronize]

# 개발자 코드내에서 테스트 코드의 변경사항을 감지함. 이후 변경된 테스트 코드가 있다면, 테스트를 진행한다.
jobs:
  Check-Changes:
    name: Check Test Code Changes
    runs-on: ubuntu-latest
    outputs:
      test_changed: ${{ steps.test-changes.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check for test code changes
        id: test-changes
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^1 HEAD)
          if echo "$CHANGED_FILES" | grep -E "(\.test\.(js|jsx|ts|tsx)|\.spec\.(js|jsx|ts|tsx))"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  Lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 9.15.0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

  Test:
    name: Test
    runs-on: ubuntu-latest
    needs: Check-Changes
    if: needs.Check-Changes.outputs.test_changed == 'true' # 위에서 진행한 job인 Check-Changes의 정보에서 test_changed를 가지고옴. true라면 Test를 진행.
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v4
        with:
          version: 9.15.0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test -- --run
